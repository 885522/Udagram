version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@1.3.1
  eb: circleci/aws-elastic-beanstalk@1.0.2
jobs:
  docker-build:
    docker:
      - image: "cimg/base:stable"
    steps:
    # install dependencies
      - node/install
      - checkout
      - aws-cli/setup
      - eb/setup
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Install api Dependencies
          command: |
            npm run api:install
      - run:
          name: Front-End Lint
          command: |
            npm run frontend:lint
      # builds
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Api Build
          command: |-
            npm run api:build 
      # deployments
      - run:
          name: Deploy Front-End App
          command: |
            aws s3 cp --recursive --acl public-read ./udagram-frontend/www $S3_BUCKET_FRONTEND
      - run:
          name: Deploy Api App
          command: |-
            eb create Udagram-env
            eb use Udagram-env
            eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_BUCKET=$EB_BUCKET AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY JWT_SECRET=$JWT_SECRET PORT=$PORT POSTGRES_DB=$POSTGRES_DB POSTGRES_HOST=$POSTGRES_HOST POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_PORT=$POSTGRES_PORT POSTGRES_USERNAME=$POSTGRES_USERNAME URL=$URL && eb deploy

workflows:
  docker-build:
    jobs:
      - docker-build
